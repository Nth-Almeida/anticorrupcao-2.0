const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, PermissionFlagsBits } = require('discord.js');
const AntiCorrupcao = require('../data/schema');
const getRG = require('../utils/getRG'); // Fun√ß√£o para extrair o RG

module.exports = {
    name: 'anticorrupcao',
    description: 'Solicitar Anti-Corrup√ß√£o',
    async execute(message) {
        // Verificar se o usu√°rio tem permiss√£o de admin
        if (!message.member.permissions.has(PermissionFlagsBits.Administrator)) {
            return message.reply({ content: '‚ö†Ô∏è Voc√™ n√£o tem permiss√£o para usar este comando.', ephemeral: true });
        }

        // Enviar a primeira mensagem ao usu√°rio que executou o comando
        await message.reply({ content: '‚úÖ Voc√™ tem permiss√£o para solicitar a an√°lise de anti-corrup√ß√£o. Agora, clique no bot√£o abaixo para enviar a solicita√ß√£o.', ephemeral: true });

        // Obter a foto do servidor
        const serverIcon = message.guild.iconURL({ format: 'png', dynamic: true });

        // Criar a embed com a informa√ß√£o sobre a solicita√ß√£o
        const embed = new EmbedBuilder()
            .setColor(0x006400) // Verde escuro
            .setTitle('<a:oi:1326926064693280849> Solicita√ß√£o de Anti-Corrup√ß√£o')
            .setDescription('<a:alerta:1340377326084558911> **Revise os requisitos abaixo e clique no bot√£o para solicitar a an√°lise.**\n\n**Certifique-se de atender a todos os crit√©rios antes de solicitar.**')
            .addFields(
                { name: '<a:setagd:1340379055442235494> Requisitos', value: 'Para solicitar a tag "anti-corrup√ß√£o", √© necess√°rio cumprir os seguintes crit√©rios:', inline: false },
                { name: '<a:setagd:1340379055442235494> Atividade', value: '√â obrigat√≥rio ter, no m√≠nimo, 8 dias de atividade cont√≠nua na pol√≠cia antes de solicitar o "anti-corrup√ß√£o".', inline: false },
                { name: '<a:setagd:1340379055442235494> Promo√ß√£o', value: 'A tag "anti-corrup√ß√£o" √© obrigat√≥ria para promo√ß√£o dentro da corpora√ß√£o.', inline: false },
                { name: '<a:setagd:1340379055442235494> Proibi√ß√µes', value: '√â proibido realizar revistas e transferir itens ao pr√≥prio invent√°rio ("Caixa 2").', inline: false },
                { name: '<a:setagd:1340379055442235494> Conduta', value: '√â proibido coletar itens do ch√£o, aceitar itens de terceiros ou armazenar itens ilegais.', inline: false },
                { name: '<a:setagd:1340379055442235494> Procedimento', value: 'Use sempre o comando `/apreender` para confiscar itens de forma legal.', inline: false }
            )
            .setThumbnail(serverIcon)
            .setFooter({ text: 'ü§ñ Copyright ¬Æ 2024 Nathan ‚úÖ ' })
            .setTimestamp();

        // Criar bot√£o de solicita√ß√£o
        const anticorrupcaoButton = new ButtonBuilder()
            .setCustomId('solicitar_anticorrupcao')
            .setLabel('Solicitar Anti-Corrup√ß√£o')
            .setStyle(ButtonStyle.Success)
            .setEmoji('<:621f624404744433aaae3da642f760fd:1340369787196543027>'); 

        const row = new ActionRowBuilder().addComponents(anticorrupcaoButton);

        // Enviar a mensagem com a embed e o bot√£o
        await message.channel.send({ embeds: [embed], components: [row] });
    },

    // Lidar com a intera√ß√£o do bot√£o
    async interaction(interaction) {
        const { member } = interaction;
        
        // Verificar se a intera√ß√£o √© para a solicita√ß√£o de anti-corrup√ß√£o
        if (interaction.customId === 'solicitar_anticorrupcao') {
            const userEntry = await AntiCorrupcao.findOne({ userId: member.id });

            // Verifica se o usu√°rio j√° tem registro no banco de dados
            if (userEntry) {
                // L√≥gica de valida√ß√£o de tempo de servi√ßo (m√≠nimo 8 dias)
                const dataIngressou = new Date(userEntry.dateJoined);
                const diasDeAtividade = Math.floor((new Date() - dataIngressou) / (1000 * 60 * 60 * 24));

                if (diasDeAtividade < 8) {
                    return interaction.reply({ content: '‚ö†Ô∏è Voc√™ precisa ter no m√≠nimo **8 dias de atividade** na pol√≠cia para solicitar a tag "anti-corrup√ß√£o".', ephemeral: true });
                }

                // Atualizando o status de solicita√ß√£o de anti-corrup√ß√£o
                userEntry.anticorrupcaoSolicitado = true;
                await userEntry.save();

                // Enviar DM para o usu√°rio informando a solicita√ß√£o registrada
                try {
                    await member.send({ content: '‚úÖ Sua solicita√ß√£o de anti-corrup√ß√£o foi registrada com sucesso! Aguarde a an√°lise.' });
                } catch (error) {
                    console.error('Erro ao enviar DM para o usu√°rio:', error);
                }

                return interaction.reply({ content: '‚úÖ Sua solicita√ß√£o de anti-corrup√ß√£o foi registrada com sucesso!', ephemeral: true });
            } else {
                return interaction.reply({ content: '‚ö†Ô∏è Erro: Usu√°rio n√£o encontrado no banco de dados.', ephemeral: true });
            }
        }
    }
};
